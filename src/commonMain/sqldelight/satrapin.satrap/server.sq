import kotlin.Boolean;

CREATE TABLE IF NOT EXISTS serverEntity (
  server_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  proxy_id INTEGER,
  server_url TEXT NOT NULL,
  port INTEGER NOT NULL,
  title TEXT NOT NULL,
  organization Text NOT NULL,
  description TEXT NOT NULL,
  syncServer INTEGER AS Boolean NOT NULL DEFAULT 0, -- sync with remote
  showSSHAgent INTEGER AS Boolean NOT NULL DEFAULT 0,
  isSSHAgentDefault INTEGER AS Boolean NOT NULL DEFAULT 0,
  defaultUserId INTEGER,
  FOREIGN KEY (proxy_id) REFERENCES proxy(proxy_id) ON DELETE SET NULL
);

getLastInsertedId:
SELECT last_insert_rowid();

insertServer:
INSERT OR REPLACE
INTO serverEntity(server_id, proxy_id, server_url, port, title, organization, description, syncServer, showSSHAgent, isSSHAgentDefault, defaultUserId)
VALUES (?, ?, ?, ?, ?,?, ?, ?,?, ?, ?);

updateServer:
UPDATE serverEntity
SET proxy_id = ?, server_url = ?, port = ?, title = ?, organization = ?, description = ?, syncServer = ?, showSSHAgent = ?, isSSHAgentDefault = ?, defaultUserId = ?
WHERE server_id = ?;

getAllServers:
SELECT *
FROM serverEntity;

getServerById:
SELECT *
FROM serverEntity
WHERE server_id = :id;

deleteServerById:
DELETE FROM serverEntity
WHERE server_id = :id;